{
    // When true, opening any file that appears to be a gzipped file will cause
    // the package to attempt to open it as a gzipped file. When set to false,
    // you must trigger the command manually for a file that has already been
    // opened.
    "unzip_on_load": true,

    // Set the gzip compression level used when compressing files. The value can
    // be anywhere from 0 to 9. The higher the number, the more compression
    // there is at the expense of compression speed.
    //
    // A value of 0 turns off compression entirely.
    "compression_level": 9,

    // When editing a gzipped file, GZipper creates a temporary file for you to
    // edit, and recompresses when you save. This setting controls what happens
    // to the temporary file when you close it.
    //
    // When this setting is true, the file is placed into the system trash
    // folder, so that you can potentially retreive it if desired. When it is
    // false, GZipper just deletes the file instead.
    "trash_temp_on_close": true,

    // When trash_temp_on_close is true, this controls what happens if the
    // operation to put the file in the trash fails. A value of false causes
    // the temporary file to be left in place for you to manually clean up. Set
    // this to true to delete the file normally (i.e. not to the trash) if the
    // trash operation failes.
    //
    // This is only used in situations where sending a file to the trash could
    // fail, such as on Linux in cases where the underlying send2trash library
    // tries to use a trash folder in a location you don't have access to.
    "delete_on_trash_fail": false,

    // When using the command to delete a gzip file and its temporary file, this
    // setting controls whether the tempoary buffer will remain open after the
    // delete.
    //
    // When this setting is false, the underlying temporary file will be deleted
    // but the buffer will remain, which allows you to see the content and
    // recover by saving the file.
    //
    // Setting this to true will force the buffer to close after the delete.
    "close_temp_on_delete": false,
}